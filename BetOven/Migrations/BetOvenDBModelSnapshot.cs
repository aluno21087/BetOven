// <auto-generated />
using System;
using BetOven.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BetOven.Migrations
{
    [DbContext(typeof(BetOvenDB))]
    partial class BetOvenDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BetOven.Models.Apostas", b =>
                {
                    b.Property<int>("NAposta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantia")
                        .HasColumnType("float");

                    b.Property<int>("UserFK")
                        .HasColumnType("int");

                    b.HasKey("NAposta");

                    b.HasIndex("UserFK");

                    b.ToTable("Apostas");
                });

            modelBuilder.Entity("BetOven.Models.Apostas_Jogos", b =>
                {
                    b.Property<int>("ApostaFK")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JogoFK")
                        .HasColumnType("int");

                    b.Property<double>("Multiplicador")
                        .HasColumnType("float");

                    b.HasKey("ApostaFK");

                    b.HasIndex("JogoFK");

                    b.ToTable("Apostas_Jogos");
                });

            modelBuilder.Entity("BetOven.Models.Depositos", b =>
                {
                    b.Property<int>("NDeposito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Formato_pagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Montante")
                        .HasColumnType("float");

                    b.Property<string>("Origem_deposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserFK")
                        .HasColumnType("int");

                    b.HasKey("NDeposito");

                    b.HasIndex("UserFK");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("BetOven.Models.Jogos", b =>
                {
                    b.Property<int>("Njogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datainiciojogo")
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipaA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipaB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Njogo");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("BetOven.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datanasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BetOven.Models.Apostas", b =>
                {
                    b.HasOne("BetOven.Models.Users", "User")
                        .WithMany("ListaApostas")
                        .HasForeignKey("UserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BetOven.Models.Apostas_Jogos", b =>
                {
                    b.HasOne("BetOven.Models.Apostas", "Aposta")
                        .WithMany()
                        .HasForeignKey("ApostaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BetOven.Models.Jogos", "Jogo")
                        .WithMany()
                        .HasForeignKey("JogoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BetOven.Models.Depositos", b =>
                {
                    b.HasOne("BetOven.Models.Users", "User")
                        .WithMany("ListaDepositos")
                        .HasForeignKey("UserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
